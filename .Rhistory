dist(hc)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
denmt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex - 2, col = cols1[newClust])
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, lwd = 2)
points(newCx, newCy, col = cols1, pch = 8, cex = 2 lwd = 2)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, cols1[newClust2])
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex =2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex =2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex =2)
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
pal <- colorRampPalette(cols)
library(datasets)
image(volcano, col = pal(20))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x, y)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
(svd1$u[,1] * svd1$d[,1]) %*% svd1$v[,1]
(svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
MYIMAGE(A1)
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[,1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd$562, ssd$563)
names(562, 563)
names(c(ssd$562, ssd$563))
names(c("ssd$562", "ssd$563"))
names(ssd[562:563])
ssd$subject
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562, 563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
sub1[maxCon]
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- kClust$size==29
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch = 12, ylab = "Laying Cluster")
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
?packages(dyplr)
data(sleep)
head(sleep)
g1 <- sleep$extra[1:10]; g2 <- sleep$extra[11:20]
difference <- g2-g1
mn <- mean(difference); s <- sd(difference); n <- 10
mn + c(-1,1)*qt(0.975, n-1)* s / sqrt(n)
t.test(difference)
t.test(g2, g1, paired = TRUE)
t.test(extra ~ I(relevel(group,2)), paired = TRUE, data = sleep)
sleep
•	sp <- sqrt((7 * 15.34^2 + 20 * 18.23^2) / (8+21 – 2))
sp <- sqrt((7 * 15.34^2 + 20 * 18.23^2) / (8+21 – 2))
sp <- sqrt((7 * 15.34^2 + 20 * 18.23^2) / (8+21 - 2))
132.86 - 127.44 + c(-1,1) * qt(0.975, 27) * sp * (1/8 + 1/21)^0.5
t.test(sq)
t.test(sp)
library(datasets)
data(ChickWeight)
head(ChickWeight)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
library(reshape2)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
names(wideCW)[-(1:2)] <- paste("time", names(wideCW)[-(1:2)], sep = "")
library(dplyr)
wideCW <- mutate(wideCW, gain = time21 - time0)
wideCW
wideCW14 <- subset(wideCW, Diet %in% c(1,4))
rbind(t.test(gain ~ Diet, paired = FALSE, var.equal = TRUE, data = wideCW14)$conf, t.test(gain ~ Diet, paired = FALSE, var.equal = FALSE, data = wideCW14)$conf)
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(0.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2-g1
mean(difference)
s <- sd(difference)
mean(difference) + c(-1,1)*qt(0.975,9)*s/sqrt(10)
mn + c(-1,1)*qt(0.975,9)*s/sqrt(10)
x$conf.int
t.test(difference)$conf.int
sp <- (8-1)*(15.34)^2+(21-1)(18.23)^2
sp <- (7)*(15.34)^2+(20)(18.23)^2
sp <- (7)*(15.34)^2+(20)*(18.23)^2
27
ns <- 27
sp <- sqrt(sp / ns)
(132.86 - 127.44) + c(-1,1) * ns * (sp*sqrt(1/8 + 1/21))
(132.86 - 127.44) + c(-1,1) * qt(.975,ns) * sp*sqrt(1/8 + 1/21)
132.86 - 127.44 + c(-1,1) * qt(.975,ns) * sp*sqrt(1/8 + 1/21)
sp <- sqrt((var(g1)/10 + var(g2)/10)/18)
sp <- sqrt((9*var(g1) + 9*var(g2))/18)
sp * sqrt(1/10+1/10)
md + c(-1,1)*qt(0.975,18)*sp*sqrt(1/5)
t.test(g2, g1)$conf
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE)$conf
(15.34^2/8 + 18.23^2/21)^2
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^2/8)^2/(7)+(18.23^2/21)^2/(20)
mydf <- num/den
132.85-127.44 + c(-1,1) * qt(0.975, mydf) * (15.34)^2 / 8 + (18.23)^2 / 21
132.85-127.44 + c(-1,1) * qt(0.975, mydf) * sqrt(15.34^2 / 8 + 18.23^2 / 21)
132.86-127.44 + c(-1,1) * qt(0.975, mydf) * sqrt(15.34^2/8 + 18.23^2/21)
10/sqrt(100)
2
0.8
15
qt(0.95, 15)
dim(fs)
t.test(fs$sheight - fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
pt(2.5, 15, lower.tail = FALSE)
qnorm(0.95)
qnorm(0.95)
qnorm(0.99)
pnrom(2, lower.tail = FALSE)
pnorm(2, lower.tail = FALSE)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbiom(6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(7, size = 8, prob = 0.5, lower.tail = TRUE)
ppois(9, 5, lower.tail = FALSE)
1100 + c(-1,1)*qt(0.95,8)*30/sqrt(9)
qt(0.95,8)
6/qt(0.95,8)
6/qt(0.975,8)
1100 + c(-1,1)*qt(0.975,8)*30/sqrt(9)
-2 + c(-1,1)*qt(0.975,9)*0.6/sqrt(10)
-2 + c(-1,1)*qt(0.95,9)*0.6/sqrt(10)
t.test(-2)
t.test(-2, 10)
-2 + c(-1,1)*qt(0.975,19)*0.6/sqrt(20)
-2 + c(-1,1)*qt(0.95,19)*0.6/sqrt(20)
-2 + c(-1,1)*qt(0.95,19)*0.68/sqrt(20)
-2 + c(-1,1)*qt(0.975,19)*0.68/sqrt(20)
-2 + c(-1,1)*qt(0.975,19)*0.6/sqrt(20)
(3-5)+c(-1,1)*qt(0.975,18)*0.6*(1/10 + 1/10)^0.5
(3-5)+c(-1,1)*qt(0.95,18)*0.6*(1/10 + 1/10)^0.5
(3-5)+c(-1,1)*qt(0.975,18)*0.6*(1/10 + 1/10)^0.5
(10-1)*0.68^2 + (10-1)*0.6^2
/18
(10-1)*0.68^2 + (10-1)*0.6^2 / 18
((10-1)*0.68^2 + (10-1)*0.6^2) / 18
sqrt(((10-1)*0.68^2 + (10-1)*0.6^2) / 18)
(3-5)+c(-1,1)*qt(0.975,18)*0.6412488*(1/10 + 1/10)^0.5
qz(0.975)
qnorm(0.975)
(3-5)+c(-1,1)*qt(0.975,18)*0.4112*(1/10 + 1/10)^0.5
(6-4)+c(-1,1)*qnorm(0.975)*zz*(2/100)^0.5
zz <- sqrt(((100-1)*2^2 + (100-1)*0.5^2) / 198)
(6-4)+c(-1,1)*qnorm(0.975)*zz*(2/100)^0.5
zz <- sqrt(((9-1)*1.5^2 + (9-1)*1.8^2) / 16)
(-3 - 1)+c(-1,1)*qt(0.975, 17)*zz*(2/9)^0.5
sqrt(0.5*0.6+0.5*0.68)
9*0.68^+9*0.6^2
(9*0.68^+9*0.6^2)/18
sqrt((9*0.68^+9*0.6^2)/18)
sqrt((9*0.68^2+9*0.6^2)/18)
0.8^2
sqrt(0.64)
9*0.6^2 / 18
9*0.68^2 / 18
0.5*0.6^2
0.5*0.68^2
0.5*0.68^2 + 0.5*0.6^2
sqrt(0.4112)
z <- qnorm(1- alpha)
z <- qnorm(1- 2)
z <- qnorm(1- 0.05)
pnrom(30 + z*4/sqrt(16), mean = 30, sd = 4/sqrt(16), lower.tail = FALSE)
pnorm(30 + z*4/sqrt(16), mean = 30, sd = 4/sqrt(16), lower.tail = FALSE)
pnorm(30 + z*4/sqrt(16), mean = 32, sd = 4/sqrt(16), lower.tail = FALSE)
x <- c(140, 138, 150, 148, 135)
y <- c(132, 135, 151, 146, 130)
diff <- y-x
t.test(x~y, paired = TRUE, var.equal = FALSE)$p
mean(x)
mean(y)
mean(x) - mean(y)
f <- data.frame()
f <- cbind(x,y)
f
t.test(x~y, paired = TRUE, var.equal = FALSE, data = f)$p
t.test(f$x~f$y, paired = TRUE, var.equal = FALSE, data = f)$p
t.test(mean(x)~mean(y), paired = TRUE, var.equal = FALSE, data = f)$p
t.test(x~y, paired = TRUE, var.equal = FALSE, data = f)
t.test(x = y, paired = TRUE, var.equal = FALSE, data = f)
t.test(difference, paired = FALSE, var.equal = FALSE, data = f)
t.test(diff, paired = FALSE, var.equal = FALSE, data = f)
t.test(diff, paired = TRUE, var.equal = FALSE, data = f)
t.test(diff, paired = FALSE, var.equal = FALSE, data = f)
1100 + c(-1,1) * pt(0.025,8)*30/sqrt(9)
1100 + c(-1,1) * pt(0.05,8)*30/sqrt(9)
1100 + c(-1,1) * pt(0.975,8)*30/sqrt(9)
1100 + c(-1,1) * pt(0.975,8)*90/sqrt(9)
1100 + c(-1,1) * pt(0.95,8)*90/sqrt(9)
1100 + c(-1,1) * pt(0.975,8)*30
1100 + c(-1,1) * pt(0.975,8)*10
pbinom(3, size = 4, prob = 0.5)
ppois(10, 17.87, lower.tail = FALSE)
ppois(10, 17.87, lower.tail = true)
ppois(10, 17.87, lower.tail = TRUE)
?t.test
zz <- sqrt(((9-1)*1.5^2 + (9-1)*1.8^2) / 16)
pnorm(30 + z*4/sqrt(16), mean = 30, sd = 4/sqrt(16), lower.tail = FALSE)
pnorm(30 + z*4/sqrt(16), mean = 32, sd = 4/sqrt(16), lower.tail = FALSE)
zz
(-1 - 1)
t.test(-3, mu = 1, alternative = "two.sided")
power.t.test(n= 100, delta = 0.01, sd = 0.04, type = "one.sample", alt = "one.sided")$power
power.t.test(power = 0.9, delta = 0.01, sd = 0.04, type = "one.sample", alt = "one.sided")$n
(-3 - 1)+c(-1,1)*qt(0.975, 17)*zz*(2/9)^0.5
(-3 - 1)+c(-1,1)*qt(0.975, 17)*zz*(2/9)^0.5
(1.5^2)/9+1.8^2/9
((1.5^2)/9)^2
0.0625/8
(((1.5^2)/9)^2)/8
((1.5^2)/9+1.8^2/9)/((((1.5^2)/9)^2)/8+(((1.8^2)/9)^2)/8)
(-3 - 1)+c(-1,1)*qt(0.975, 17)*zz*(2/9)^0.5
(-3 - 1)+c(-1,1)*qt((1-0.05), 17)*zz*(2/9)^0.5
(-3 - 1)+c(-1,1)*qt((1-0.1), 17)*zz*(2/9)^0.5
(-3 - 1)+c(-1,1)*qt((1-0.01), 17)*zz*(2/9)^0.5
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
install.packages("manipulate")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
library(datasets)
head(airquality)
dTable(airquality, sPaginationType = "full_numbers")
install.packages("rCharts" type="source")
install.packages("rCharts", type="source")
install.packages("installr")
library(dplyr)
install.packages("rCharts")
library(swirl)
install.packages("swirl")
library(swirl)
install.packages("shiny")
library(shiny)
pwd
getwd()
runApp(./Documents/Data Science/Data Products/Week 1/shinyExample)
runApp("./Documents/Data Science/Data Products/Week 1/shinyExample")
getwd()
runApp("./Documents/Data Science/Data Products/Week 1/shinyExample")
runApp("./Documents/Data Science/Data Products/Week 1/shinyExample")
runApp("./Documents/Data Science/Data Products/Week 1/shinyExample")
runApp("./Documents/Data Science/Data Products/Week 1/shinyExample")
runApp("./Documents/Data Science/Data Products/Week 1/shinyExample")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='padam0', token='8E1A737B6CB7E00CD82C0012ADCDC5DC', secret='d2gacr/VYEZmYBkeOE3LoOWrGespGCq3inp5BCNH')
library(rsconnect)
rsconnect::setAccountInfo(name='padam0', token='8E1A737B6CB7E00CD82C0012ADCDC5DC', secret='d2gacr/VYEZmYBkeOE3LoOWrGespGCq3inp5BCNH')
rsconnect::deployApp("./Documents/Data Science/Data Products/Week 1/shinyExample")
install.packages("devtools")
library(devtools)
install.packages("manipulate")
require(devtools)
install_github("rCharts", "ramnathv")
require(rCharts)
install.packages("googleVis")
library(googleVis)
install.pacakges("plotly")
install.packages("plotly")
Sys.setenv("plotly_username"="Padam-0")
Sys.setenv("plotly_api_key"="1j5kag66ba")
install.packages("slidify")
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
getwd()
setwd("~/Documents/Data Science/Data Products/Assignment/shinyApp")
library(datasets)
head(cars)
head(carsmt)
head(carsmg)
head(carmg)
head(mtcars)
dim(mtcars)
mtcars
install.packages("stringr")
library(stringr)
word(mtcars[1,1])
word(mtcars[1,0])
mtcars([1])
mtcars([1,0])
mtcars[1,0]
mtcars[1]
names(mtcars)
row.names(mtcars)
word(row.names(mtcars))
a <- mtcars
a <- cbind(a, word(row.names(a)))
a
library(dplyr)
rename(a, manufacturer = word(row.names(a)))
rename(a, "manufacturer" = "word(row.names(a))")
> a <- cbind(a, manufacturer = word(row.names(a)))
> a <- cbind(a, "manufacturer" = word(row.names(a)))
library(plyr)
rename(a, manufacturer = word(row.names(a)))
> a <- cbind(a, "manufacturer" = word(row.names(a)))
rename(a, "manufacturer" = "word(row.names(a))")
rename(a, c("manufacturer" = "word(row.names(a))"))
?cbind
runApp()
runApp()
runApp()
a <- mtcars
a <- cbind(a, word(row.names(a)))
head(a)
x <- names(a)
x
x[12]
x[12] <- "manufacturer"
x[12]
names(a) <- x
a
as.list(unique(a$manufacturer)
as.list(unique(a$manufacturer))
unique(a$manufacturer)
runApp()
y <-  unique(a$manufacturer)
y
sort(y)
runApp()
summary(y)
as.list(y)
runApp()
a <- mtcars
a <- cbind(a, word(row.names(a)))
x <- names(a)
x[12] <- "manufacturer"
names(a) <- x
manufacturers = sort(unique(a$manufacturer))
manufacturers
names(manufacturers)
values(manufacturers)
show(manufacturers)
runApp()
runApp()
runApp()
manufacturers[1]
class(manufacturers)
z <- as.list(manufacturers)
z[1]
class(z)
runApp()
runApp()
runApp()
runApp()
dim(mtcars)
runApp()
manufacturers
?conditionalPanel
mtcars
sort(mtcars)
arrange(mtcars, row.names(mtcars))
arrange(mtcars, row.names())
runApp()
runApp()
runApp()
runApp()
runApp()
mtcars
runApp()
runApp()
row.names(mtcars[23])
row.names(mtcars[23,1])
row.names(mtcars[23,0])
runApp()
mtcars
runApp()
hist(mtcars$mpg)
plot(row.names(mtcars), mtcars$mpg)
barplot(mtcars$mpg)
abline(h=mean(mtcars$mpg))
lablist <- row.names(mtcars)
labels = lablist
text(labels = lablist)
axis(labels = lablist)
axis(1, labels = lablist)
axis(1, labels = FALSE)
text(labels = lablist)
text(seq(1,32, by=1), par("usr")[3]-0.2, labels = lablist, srt = 45, xpd = TRUE)
cols <- c("red", "white")[1]
barplot(mtcars$mpg, col = cols)
cols <- c("red", "white")[x = 1]
barplot(mtcars$mpg, col = cols)
cols <- c("red", "white")[(x = 1)+1]
barplot(mtcars$mpg, col = cols)
x=1
cols <- c("red", "white")[(x = 1)+1]
barplot(mtcars$mpg, col = cols)
rsconnect::deployApp()
library(rsconnect)
rsconnect::deployApp()
setwd("~/Documents/Data Science/Data Products/Assignment/PitchPres")
author("PitchPres")
getwd()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
publish(title = 'CarMileageApp', 'index.html', host = 'rpubs')
slidify("index.Rmd")
publish(title = 'CarMileageApp', 'index.md', host = 'rpubs')
publish(title = 'CarMileageApp', 'index.html', host = 'rpubs')
getwd()
publish_rpubs(CarApp, html_file = "index.html")
publish_rpubs(title = CarApp, html_file = "index.html")
publish_rpubs(title = "CarApp", html_file = "index.html")
